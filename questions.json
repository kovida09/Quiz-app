[
    {
      "question": "Which data structure uses LIFO (Last In First Out) principle?",
      "choices": ["Queue", "Stack", "Linked List", "Tree"],
      "correct": "Stack"
    },
    {
      "question": "What is the time complexity of binary search?",
      "choices": ["O(n)", "O(log n)", "O(n^2)", "O(1)"],
      "correct": "O(log n)"
    },
    {
      "question": "Which data structure uses FIFO (First In First Out) principle?",
      "choices": ["Queue", "Stack", "Array", "Graph"],
      "correct": "Queue"
    },
    {
      "question": "Which of the following is a self-balancing binary search tree?",
      "choices": ["Binary Search Tree", "AVL Tree", "Binary Tree", "Heap"],
      "correct": "AVL Tree"
    },
    {
      "question": "What is the best case time complexity of Quick Sort?",
      "choices": ["O(n^2)", "O(n log n)", "O(n)", "O(log n)"],
      "correct": "O(n log n)"
    },
    {
      "question": "Which algorithm is used to find the shortest path in a graph?",
      "choices": ["Kruskal's algorithm", "Prim's algorithm", "Dijkstra's algorithm", "Floyd-Warshall algorithm"],
      "correct": "Dijkstra's algorithm"
    },
    {
      "question": "What is the space complexity of Merge Sort?",
      "choices": ["O(n^2)", "O(n log n)", "O(n)", "O(log n)"],
      "correct": "O(n)"
    },
    {
      "question": "Which data structure is used for implementing recursion?",
      "choices": ["Queue", "Stack", "Array", "Linked List"],
      "correct": "Stack"
    },
    {
      "question": "Which of the following sorting algorithms has the best average case time complexity?",
      "choices": ["Bubble Sort", "Selection Sort", "Insertion Sort", "Merge Sort"],
      "correct": "Merge Sort"
    },
    {
      "question": "What is the worst case time complexity of Linear Search?",
      "choices": ["O(n)", "O(log n)", "O(n^2)", "O(1)"],
      "correct": "O(n)"
    }
  ]
  